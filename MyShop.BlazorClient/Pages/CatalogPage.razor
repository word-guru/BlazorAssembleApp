@page "/catalog"
@using MyShop.Server.Repository.Models
@using MyShop.Server.Repository.BlazorClient.Data.Interface
@using MyShop.Server.Repository.HttpApiClient
@using Blazored.Toast.Services

@inject IJSRuntime JS
@inject IShopClient Client
@inject IToastService toastService

<h3>Список товаров</h3>

@if (ProductList != null)
{
    <table class="table">
        <thead>
        <tr>
            <th scope="col"></th>
            <th scope="col">Название</th>
            <th scope="col">Кол-во</th>
            <th scope="col">Описание</th>
            <th scope="col">Цена</th>
            <th scope="col"></th>
            @*<th scope="col">Удалить</th>*@
        </tr>
        </thead>
        <tbody>
        @foreach (var product in ProductList)
        {
            <tr>
                <td>
                    <img src="@product.ImageUrl" alt="product image" style="width:100px;"/>
                </td>
                <td class="align-middle" style="color: #0a58ca">
                    @product.Name
                </td>
                <td class="align-middle">
                    @product.Quantity
                </td>
                <td class="align-middle">
                    @product.Description
                </td>
                <td class="align-middle">
                    $@product.Price
                </td>
                <td class="align-middle">
                    <button name="@product.Id"
                            class="btn btn-primary btn-success"
                            @onclick="@(() => { Client.AddToCart(AddCart(product));
                                                  toastService.ShowSuccess("Товар добавлен в корзину", "Выполнено"); })"
                            type="submit">
                        Купить
                    </button>
                </td>
               
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p>Loading...</p>
}

@code
{
     private void SubmitToCart(Cart cart)
     {
         
         Client.AddToCart(cart);
         JS.InvokeVoidAsync("show_message", args: "Товар добавлен в корзину!");
     }

    private Cart AddCart(Product product)
    {
        Cart cart = new Cart();
        cart.ProductId = product.Id;
        cart.Quantity = 1;

        return cart;
    }

    private IReadOnlyList<Product>? ProductList { get; set; }


    protected async override Task OnInitializedAsync()
    {
        ProductList = await Client.GetProducts();
    }

}